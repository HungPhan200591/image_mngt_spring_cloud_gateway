spring:
  auth-service:
    url: ${SPRING_CLOUD_GATEWAY_URI_AUTH_SERVICE:http://localhost:8081}
  file-service:
    url: ${SPRING_CLOUD_GATEWAY_URI_FILE_SERVICE:http://localhost:8082}

  cloud:
    gateway:
      default-filters:
        - name: CircuitBreaker
          args:
            name: defaultCircuitBreaker
            fallbackUri: forward:/fallback
        - name: Retry
          args:
            retries: 3
            series: SERVER_ERROR
            methods: GET, POST, PUT, DELETE
            statuses: INTERNAL_SERVER_ERROR, BAD_GATEWAY
            backoff:
              firstBackoff: 1000
              maxBackoff: 10000
              factor: 2
      #        - name: RequestRateLimiter
      #          args:
      #            key-resolver: "#{@remoteAddressKeyResolver}"  # Sử dụng IP của client để giới hạn
      #            rate-limiter: "#{@inMemoryRateLimiter}"       # Sử dụng InMemoryRateLimiter

      #            - name: RequestRateLimiter
      #              args:
      #                redis-rate-limiter.replenishRate: 10  # Số lượng yêu cầu tối đa mỗi giây
      #                redis-rate-limiter.burstCapacity: 20  # Số lượng yêu cầu tối đa trong hàng đợi chờ xử lý

      routes:
        - id: auth-service
          uri: ${SPRING_CLOUD_GATEWAY_URI_AUTH_SERVICE:http://localhost:8081}
          predicates:
            - Path=/api/v1/auth/**

        - id: image-service-image-detail
          uri: ${SPRING_CLOUD_GATEWAY_URI_FILE_SERVICE:http://localhost:8082}
          predicates:
            - Path=/api/v1/file/image/{image_id}
          filters:
            - ImageDetailFilter

        - id: image-service
          uri: ${SPRING_CLOUD_GATEWAY_URI_FILE_SERVICE:http://localhost:8082}
          predicates:
            - Path=/api/v1/file/image/**
